import matplotlib.pyplot as plt
import numpy as np
from astropy.table import Table
from os import chdir

galah_data_input = '/home/klemen/data4_mount/'

# data-table settings
data_date = '20180222'
cannon_param_file = 'sobject_iraf_iDR2_180108_cannon.fits'

cannon_data = Table.read(galah_data_input+cannon_param_file)

# predetermined objects
solar_like_sobjects = [
140312003501087,140312004501092,140413003201328,140611004001251,140711002401243,140711002401316,140713004001112,140713004001188,140805002601115,140805003101303,140805003101338,140806002301392,140806002901279,140806004101159,140807005001277,140808002701299,140808003701261,140809003101322,140809003701146,141102002401182,141102002701267,141103003101379,141231003001209,150102003201119,150103002701017,150103003001048,150204002901346,150207002101161,150208003201286,150211004701179,150408004101278,150408005301184,150409003101129,150409004101294,150427004301259,150427004801275,150504003001111,150602003301072,150602003901271,150607005601279,150703005101366,150703005601062,150703005601082,150705005401363,150705005401364,150705005401377,150705006401129,150705006401314,150827005201080,150828003701040,150828003701062,150828004201034,150828004201212,150828004701096,150828005701069,150829002601283,150829003101225,150830004001040,150830004601175,150830005101144,150830005101337,150830005101391,151009001601351,151009001601363,151109002101254,151110003101178,151111002101236,151219001601078,151219002601248,151219003601245,151219003601298,151225002701158,151225003801118,151230003201236,151231002601074,160110003601039,160112001601056,160123002601062,160123002601079,160125004501038,160125004501256,160125004501389,160130005201357,160130006301234,160325003201071,160326002101077,160327004101056,160327004101248,160327004101343,160327004601337,160327006101355,160328003201282,160330002601095,160402004601106,160402005101147,160402005601084,160402006101388,160403005201158,160422004501162,160424002101194,160424003101290,160424004701369,160426004501264,160426006101338,160426006701393,160513001601022,160522006101314,160522006601193,160524004901098,160524005501270,160524006101090,160524006601258,160525003201154,160530005001359,160531001601307,160531004601362,160531005601362,160531006101153,161008003001092,161009002601018,161009004801144,161011003401169,161104002801361,161104003801323,161105003101019,161105003101345,161105004601015,161107001601132,161107001601133,161116002201296,161116003801308,161118002601176,161118004701023,161118004701221,161119004701207,161210004201073,161210004201315,161213004101187,161217002601138,161217004101075,161217004601271,161219003101122,161219004101351,161219005101191,161219005101228,170102001901072,170105003101138,170108003301041,170108004601041,170109002101106,170109002801065,170112002101294,170112002601348,170112003101027,170112003601298,170114004101329,170115001601273,170115002201381,170119002601393,170121002801292,170130003101184,170130003601019,170219003601351,170220004101215,170508004801312,170509004701096,170509005201063,170510007301226,170514003001180,170514003301001,170514003301011,170515003101035,170515003101036,170515006101289,170614004101220,170614004101381,170614004601055,170614004601061,170614005101328,170710003201082,170710003201145,170711002001243,170711005101185,170711005801034,170713005101388,170723003601118,170723005101385,170724003601147,170724004601055,170801002801345,170801004001010,170801004001215,170805003601318,170829001901039,170905002601072,170905003101147,170906003601147,170906003601159,170906003601210,170906004101067,170908001601149,170909002101136,170909002601291,170910001801313,170910003101074,170910003101081,170910005101082,170911002101145,170911004201366
]

# cannon data subsets
cannon_data = cannon_data[np.in1d(cannon_data['sobject_id'], solar_like_sobjects)]

# make histogram plots for parameters
plot_col = ['Teff_cannon', 'Logg_cannon', 'Feh_cannon']
solar_val = [5771, 4.44, 0.03]
idx_valid_param = cannon_data['flag_cannon'] == 0
for i_p in range(len(plot_col)):
    plot_vals = cannon_data[plot_col[i_p]][idx_valid_param]
    plot_vals_median = np.median(plot_vals)
    plt.hist(plot_vals, bins=75, color='black', alpha=0.33)
    plt.axvline(x=solar_val[i_p], color='black', ls='--', lw=2.5)
    plt.axvline(x=plot_vals_median, color='red', ls='--', lw=2.5)
    plt.title('All: {:.0f}    Unflagged: {:.0f}    Median: {:.2f}    Difference: {:.2f}'.format(len(solar_like_sobjects), len(plot_vals), plot_vals_median, plot_vals_median-solar_val[i_p]))
    # plt.show()
    plt.savefig('solar_twins_like_'+plot_col[i_p]+'.png', dpi=300)
    plt.close()

# make histogram plots for parameters
plot_col = [col for col in cannon_data.colnames if '_abund_cannon' in col and 'e_' not in col and 'flag_' not in col and len(col.split('_'))<4]
solar_val = np.zeros(len(plot_col))
for i_p in range(len(plot_col)):
    idx_valid_param = cannon_data['flag_'+plot_col[i_p]] == 0
    plot_vals = cannon_data[plot_col[i_p]][idx_valid_param]
    plot_vals_median = np.median(plot_vals)
    plt.hist(plot_vals, bins=100, range=(-1,1), color='black', alpha=0.33)
    # plt.axvline(x=solar_val[i_p], color='black', ls='--', lw=2.5)
    plt.axvline(x=plot_vals_median, color='red', ls='--', lw=2.5)
    plt.title('All: {:.0f}    Unflagged: {:.0f}    Median: {:.2f}    Difference: {:.2f}'.format(len(solar_like_sobjects), len(plot_vals), plot_vals_median, plot_vals_median-solar_val[i_p]))
    # plt.show()
    plt.savefig('solar_twins_like_'+plot_col[i_p]+'.png', dpi=300)
    plt.close()